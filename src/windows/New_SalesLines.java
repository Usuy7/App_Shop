/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package windows;

import DAO.ConectDB;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Javier
 */
public class New_SalesLines extends javax.swing.JFrame {
    
    // LLAMAR A LA CLASE ConectDB
    static ConectDB con = new ConectDB();
    static int num;
    
    /**
     * Creates new form New_Lines_Sale
     */
    public New_SalesLines() throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        setIconImage (new ImageIcon(getClass().getResource("../img/icono_app.png")).getImage());
        
        con.AbrirConexion();  //ABRIR LA CONEXIÓN
        
        /**
         * Llamada al método combobox Sales
         */
       
        String query = "SELECT * FROM Sales";
        ResultSet r;
        Statement s = con.getCon().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
        r = s.executeQuery(query);
        
        DefaultComboBoxModel value = new DefaultComboBoxModel();
        while (r.next()) {
            value.addElement(r.getInt("IdSale"));
        }
        
        ComboBox_idSale.setModel(value);
        
        /**
         * Llamada al método combobox Products
         */
       
        String query2 = "SELECT * FROM Products";
        ResultSet r2;
        Statement s2 = con.getCon().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
        r2 = s2.executeQuery(query2);
        
        DefaultComboBoxModel value2 = new DefaultComboBoxModel();
        while (r2.next()) {
            value2.addElement(r2.getString("Name"));
        }
        
        ComboBox_product.setModel(value2);
        
        /**
         * Llamada al método combobox para el Precio del Producto
         */
       
        String query3 = "SELECT * FROM Products";
        ResultSet r3;
        Statement s3 = con.getCon().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
        r3 = s3.executeQuery(query3);
        
        DefaultComboBoxModel value3 = new DefaultComboBoxModel();
        while (r3.next()) {
            value2.addElement(r3.getString("Price"));
        }
        
        ComboBox_price.setModel(value3);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        ID_SALE = new javax.swing.JLabel();
        ComboBox_idSale = new javax.swing.JComboBox<>();
        PRODUCT = new javax.swing.JLabel();
        ComboBox_product = new javax.swing.JComboBox<>();
        CANTITY = new javax.swing.JLabel();
        txt_cantity = new javax.swing.JTextField();
        PRICE = new javax.swing.JLabel();
        ComboBox_price = new javax.swing.JComboBox<>();
        SAVE = new javax.swing.JButton();
        CANCEL = new javax.swing.JButton();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Title.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        Title.setForeground(new java.awt.Color(255, 255, 255));
        Title.setText("NEW LINE SALE");
        getContentPane().add(Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, -1, -1));

        ID_SALE.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        ID_SALE.setForeground(new java.awt.Color(255, 255, 255));
        ID_SALE.setText("ID Sale");
        getContentPane().add(ID_SALE, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 70, 30));

        ComboBox_idSale.setBackground(new java.awt.Color(51, 51, 51));
        ComboBox_idSale.setForeground(new java.awt.Color(255, 255, 255));
        ComboBox_idSale.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(ComboBox_idSale, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 100, 30));

        PRODUCT.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        PRODUCT.setForeground(new java.awt.Color(255, 255, 255));
        PRODUCT.setText("Product");
        getContentPane().add(PRODUCT, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, 70, 30));

        ComboBox_product.setBackground(new java.awt.Color(51, 51, 51));
        ComboBox_product.setForeground(new java.awt.Color(255, 255, 255));
        ComboBox_product.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(ComboBox_product, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 100, 30));

        CANTITY.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        CANTITY.setForeground(new java.awt.Color(255, 255, 255));
        CANTITY.setText("Cantity");
        getContentPane().add(CANTITY, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 180, 70, 30));

        txt_cantity.setBackground(new java.awt.Color(51, 51, 51));
        txt_cantity.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txt_cantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 180, 100, 30));

        PRICE.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        PRICE.setForeground(new java.awt.Color(255, 255, 255));
        PRICE.setText("Price");
        getContentPane().add(PRICE, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 230, 70, 30));

        ComboBox_price.setBackground(new java.awt.Color(51, 51, 51));
        ComboBox_price.setForeground(new java.awt.Color(255, 255, 255));
        ComboBox_price.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(ComboBox_price, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 230, 100, 30));

        SAVE.setBackground(new java.awt.Color(25, 25, 25));
        SAVE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icono_guardar-A.png"))); // NOI18N
        SAVE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SAVE.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icono_guardar-B.png"))); // NOI18N
        SAVE.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icono_guardar.png"))); // NOI18N
        SAVE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAVEActionPerformed(evt);
            }
        });
        getContentPane().add(SAVE, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 480, 50, 50));

        CANCEL.setBackground(new java.awt.Color(25, 25, 25));
        CANCEL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icono_no-A.png"))); // NOI18N
        CANCEL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CANCEL.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icono_no-B.png"))); // NOI18N
        CANCEL.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icono_no.png"))); // NOI18N
        CANCEL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CANCELActionPerformed(evt);
            }
        });
        getContentPane().add(CANCEL, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 480, 50, 50));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondo_windows2.jpg"))); // NOI18N
        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 530, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CANCELActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CANCELActionPerformed
        // CANCEL
        SalesLines sLine = null;
        try {
            sLine = new SalesLines();
        } catch (SQLException ex) {
            Logger.getLogger(New_Customer.class.getName()).log(Level.SEVERE, null, ex);
        }
        sLine.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_CANCELActionPerformed

    private void SAVEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAVEActionPerformed
        // SAVE
        
        String IdS, Prod, Cantity, Pri;
        
        IdS = (String) ComboBox_idSale.getSelectedItem();
        int IdSale = getCodSale();
        Prod = (String) ComboBox_product.getSelectedItem();
        int Product = getCodProduct(Prod);
        Cantity = txt_cantity.getText();
        Pri = (String) ComboBox_price.getSelectedItem();
        int Price = getCodPrice(num);
        
        
        try {
            
            Statement s = con.getCon().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
            ResultSet.CONCUR_UPDATABLE);
            String query = "INSERT INTO SalesLines (IdSale, Product, Cantity, Price) VALUES ('" + IdSale + "','" + Product + "','" + Cantity + "','" + Price + "')";
            int resultado = s.executeUpdate(query);
            
            query = "SELECT * FROM SalesLines";
            ResultSet r = s.executeQuery(query);
            r.first();
            ComboBox_idSale.setSelectedItem(r.getInt("IdSale"));
            ComboBox_product.setSelectedItem(getNombreProduct(r.getInt("Product")));
            txt_cantity.setText(r.getString("Cantity"));
            ComboBox_price.setSelectedItem(r.getInt("Price"));
            
            SalesLines sline = new SalesLines();
            sline.setVisible(true);
            this.setVisible(false);
            
        } catch (SQLException ex) {
            Logger.getLogger(New_SalesLines.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        JOptionPane.showMessageDialog(null,"Data saved successfully", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_SAVEActionPerformed

    /**
     * Método que coje el nombre de la venta y devuelve su código.
     *
     * @return codigo - variable que contiene el código de la venta.
     *
     */
    public static int getCodSale() {

        int codigo = 0;

        try {
            ResultSet r;
            Statement s = con.getCon().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String queryNombre = "SELECT IdSale FROM Sales";
            r = s.executeQuery(queryNombre);
            r.first();
            codigo = r.getInt("IdSale");
        } catch (SQLException ex) {
            Logger.getLogger(SalesLines.class.getName()).log(Level.SEVERE, null, ex);
        }

        return codigo;
    } 
    
    /**
     * Metodo que coje el código del producto y devuelve su nombre.
     *
     * @param codigo - variable que contiene el código del producto.
     * @return nombre - variable que contiene el nombre del producto.
     */
    
    public static String getNombreProduct(int codigo) {

        String nombre;

        nombre = "";

        try {

            ResultSet r2;
            Statement s2 = con.getCon().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String queryNombre = "SELECT Name FROM Products WHERE IdProduct =" + codigo;
            r2 = s2.executeQuery(queryNombre);
            r2.first();
            nombre = r2.getString("Name");
            
        } catch (SQLException ex) {
            Logger.getLogger(SalesLines.class.getName()).log(Level.SEVERE, null, ex);
        }

        return nombre;
    }
    
    /**
     * Método que coje el nombre del producto y devuelve su código.
     *
     * @param nombre - variable que contiene el nombre del producto.
     * @return codigo - variable que contiene el código del producto.
     *
     */
    public static int getCodProduct(String nombre) {

        int codigo = 0;

        try {
            ResultSet r2;
            Statement s2 = con.getCon().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String queryNombre = "SELECT IdProduct FROM Products WHERE Name ='" + nombre + "'";
            r2 = s2.executeQuery(queryNombre);
            r2.first();
            codigo = r2.getInt("IdProduct");
            num = codigo;
        } catch (SQLException ex) {
            Logger.getLogger(SalesLines.class.getName()).log(Level.SEVERE, null, ex);
        }

        return codigo;
    }
    
    /**
     * Método que coje el nombre de la trademark y devuelve su código.
     *
     * @return codigo - variable que contiene el código del trademark.
     *
     */
    public static int getCodPrice (int num) {

        int codigo = 0;

        try {
            ResultSet r3;
            Statement s3 = con.getCon().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String queryNombre = "SELECT Price FROM Products WHERE IdProduct ='" + num + "'";
            r3 = s3.executeQuery(queryNombre);
            r3.first();
            codigo = r3.getInt("Price");
        } catch (SQLException ex) {
            Logger.getLogger(Workers.class.getName()).log(Level.SEVERE, null, ex);
        }

        return codigo;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(New_SalesLines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(New_SalesLines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(New_SalesLines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(New_SalesLines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new New_SalesLines().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(New_SalesLines.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JButton CANCEL;
    private javax.swing.JLabel CANTITY;
    private javax.swing.JComboBox<String> ComboBox_idSale;
    private javax.swing.JComboBox<String> ComboBox_price;
    private javax.swing.JComboBox<String> ComboBox_product;
    private javax.swing.JLabel ID_SALE;
    private javax.swing.JLabel PRICE;
    private javax.swing.JLabel PRODUCT;
    private javax.swing.JButton SAVE;
    private javax.swing.JLabel Title;
    private javax.swing.JTextField txt_cantity;
    // End of variables declaration//GEN-END:variables
}
